
/*
Toon Chin Hoong SUKD2300982
Jessie Choong Jia Chyi SUKD2200463
Muhaimen Al Hossain SUKD2200424
Israt Solaiman Chowdhury SUKD2201055
*/

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author rextoon
 */
public class BMI extends javax.swing.JFrame {

    /**
     * Creates new form BMI
     */
    public BMI() {
        initComponents();
        lblNameErr.setVisible(false);   
        lblAgeErr.setVisible (false);
        lblHeightErr.setVisible(false);
        lblWeightErr.setVisible(false);

        lblEtNameErr.setVisible(false);
        lblEtAgeErr.setVisible(false);
        lblEtHeightErr.setVisible(false);
        lblEtWeightErr.setVisible(false);           
     
       
        //Setting pattern for each input field
        namePattern = "([a-zA-Z]+)((\\s[a-zA-Z]+)*)";
        agePattern = "^(\\d{1,3})";
        heightPattern = "^(\\d{1,3}).((\\d{1,2})*)";
        weightPattern = "^(\\d{1,3}).((\\d{1,2})*)";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtWeight = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        lblNameErr = new javax.swing.JLabel();
        lblAgeErr = new javax.swing.JLabel();
        lblHeightErr = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblWeightErr = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        BMIstatus = new javax.swing.JLabel();
        BMIcounter = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbResult = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultOutput = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        cbEdit = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtEditHeight = new javax.swing.JTextField();
        txtEditWeight = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtEditName = new javax.swing.JTextField();
        txtEditAge = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        EditStatus = new javax.swing.JLabel();
        BMIcounter2 = new javax.swing.JLabel();
        lblEtNameErr = new javax.swing.JLabel();
        lblEtAgeErr = new javax.swing.JLabel();
        lblEtHeightErr = new javax.swing.JLabel();
        lblEtWeightErr = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 153));
        setLocation(new java.awt.Point(500, 100));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel1.setBackground(new java.awt.Color(0, 153, 204));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(243, 239, 239));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BMI CALCULATOR");
        jLabel1.setToolTipText("");

        jPanel4.setBackground(new java.awt.Color(255, 204, 51));

        txtWeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWeightFocusLost(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(250, 250, 230));
        jLabel6.setText("cm");

        jLabel7.setFont(new java.awt.Font("Myanmar Text", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(250, 250, 230));
        jLabel7.setText("Kg");

        btnSubmit.setBackground(new java.awt.Color(255, 102, 0));
        btnSubmit.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblNameErr.setForeground(new java.awt.Color(255, 51, 51));
        lblNameErr.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNameErr.setText("Invalid name.");

        lblAgeErr.setForeground(new java.awt.Color(255, 51, 51));
        lblAgeErr.setText("Invalid age.");

        lblHeightErr.setForeground(new java.awt.Color(255, 51, 51));
        lblHeightErr.setText("Invalid height.");

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(250, 250, 223));
        jLabel2.setText("Name :");
        jLabel2.setAlignmentX(0.5F);

        jLabel3.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(250, 250, 223));
        jLabel3.setText("Age :");
        jLabel3.setAlignmentX(0.5F);

        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        txtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAgeFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(250, 250, 223));
        jLabel4.setText("Height :");
        jLabel4.setAlignmentX(0.5F);

        jLabel5.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(250, 250, 223));
        jLabel5.setText("Weight :");
        jLabel5.setAlignmentX(0.5F);

        lblWeightErr.setForeground(new java.awt.Color(255, 51, 51));
        lblWeightErr.setText("Invalid weight.");

        txtHeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHeightFocusLost(evt);
            }
        });
        txtHeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblWeightErr, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(13, 13, 13)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSubmit)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHeight, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblNameErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAgeErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblHeightErr, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNameErr, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAgeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblHeightErr)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWeightErr, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));
        jPanel5.setForeground(new java.awt.Color(252, 250, 220));

        BMIstatus.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N

        BMIcounter.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jLabel14.setText("Status:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(BMIcounter, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                        .addComponent(BMIstatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BMIstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BMIcounter, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("BMI", jPanel1);

        cbResult.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbResultItemStateChanged(evt);
            }
        });
        cbResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbResultActionPerformed(evt);
            }
        });

        resultOutput.setColumns(20);
        resultOutput.setRows(5);
        jScrollPane1.setViewportView(resultOutput);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(cbResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(380, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Result", jPanel2);

        cbEdit.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbEditItemStateChanged(evt);
            }
        });

        jLabel8.setText("Weight :");

        txtEditHeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEditHeightFocusLost(evt);
            }
        });

        jLabel9.setText("cm");

        jLabel10.setText("Kg");

        jLabel11.setText("Name :");

        jLabel12.setText("Age :");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtEditName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEditNameFocusLost(evt);
            }
        });
        txtEditName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditNameActionPerformed(evt);
            }
        });

        txtEditAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditAgeActionPerformed(evt);
            }
        });

        jLabel13.setText("Height :");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        EditStatus.setText("S");

        BMIcounter2.setText("C");

        lblEtNameErr.setForeground(new java.awt.Color(255, 0, 0));
        lblEtNameErr.setText("Invalid name");

        lblEtAgeErr.setForeground(new java.awt.Color(255, 0, 0));
        lblEtAgeErr.setText("Invalid age");

        lblEtHeightErr.setForeground(new java.awt.Color(255, 0, 0));
        lblEtHeightErr.setText("Invalid height");

        lblEtWeightErr.setForeground(new java.awt.Color(255, 0, 0));
        lblEtWeightErr.setText("Invalid weight");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EditStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BMIcounter2))
                .addGap(382, 382, 382))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(cbEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))
                                .addGap(75, 75, 75)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDelete))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(txtEditWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel10))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(txtEditName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                                    .addComponent(txtEditAge, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtEditHeight, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblEtHeightErr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblEtNameErr, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblEtAgeErr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblEtWeightErr, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 10, Short.MAX_VALUE)))))))
                .addGap(197, 197, 197))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cbEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtEditName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(lblEtNameErr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtEditAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEtAgeErr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtEditHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(4, 4, 4)
                .addComponent(lblEtHeightErr)
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtEditWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEtWeightErr)
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(EditStatus)
                .addGap(18, 18, 18)
                .addComponent(BMIcounter2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Edit", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
   
       
            
            if(selection!=-1)
                
            {
                
                try{
                        
                        edtName = txtEditName.getName();
                        edtAge = Integer.parseInt(txtEditAge.getText());
                        edtHeight = Double.parseDouble(txtEditHeight.getText());
                        edtWeight = Double.parseDouble(txtEditWeight.getText());
                        
                    } catch (NumberFormatException e){
                        
                    }
                
                etName = txtEditName.getText();
                etAge = txtEditAge.getText();
                etHeight = txtEditHeight.getText();
                etWeight = txtEditWeight.getText();
                
                validateEtName();
                validateEtAge();
                validateEtHeight();
                validateEtWeight();
                
                
                
                if(validateEtName() && validateEtAge() && validateEtHeight() && validateEtWeight()){
                    
                    EditStatus.setText("Status : Record updated.");
                    
                    Person p = persons.get(selection);
                
                    p.setName(txtEditName.getText());
                    p.setAge(Integer.parseInt(txtEditAge.getText()));
                    p.setHeight(Double.parseDouble(txtEditHeight.getText()));
                    p.setWeight(Double.parseDouble(txtEditWeight.getText()));
                    persons.set(selection,p);
                    
                    updateComboBox();
                    updateRecordCounter();
                    
                }else if (etName.isEmpty() || etAge.isEmpty() || etHeight.isEmpty() || etWeight.isEmpty()){
                    int counter = 0;
                    updateRecordCounter();
                    recordCounter();
                   
                    
                    if (counter == 0){
                        JOptionPane.showMessageDialog(this,"No record found. Please fill in form at BMI tab first.", "No record found", JOptionPane.INFORMATION_MESSAGE);
                    }
                    
                    else if (etName.isEmpty()){
                        
                        lblEtNameErr.setVisible(true);
                    }
                    
                    else if (etAge.isEmpty()){
                        lblEtAgeErr.setVisible(true);
                    }
                    else if (etHeight.isEmpty()){
                        lblEtHeightErr.setVisible(true);
                    }
                    else if (etWeight.isEmpty()){
                    lblEtWeightErr.setVisible(true);
                    
                    }
                    
                }     
                
            }

            

        
                

            
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbResultItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbResultItemStateChanged
        selection = cbResult.getSelectedIndex();
        if(selection!=-1)
            displayResult(selection);
    }//GEN-LAST:event_cbResultItemStateChanged

    private void cbEditItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbEditItemStateChanged
        lblEtNameErr.setVisible(false);
        lblEtAgeErr.setVisible(false);
        lblEtHeightErr.setVisible(false);
        lblEtWeightErr.setVisible(false);
        
        selection = cbEdit.getSelectedIndex();
        if(selection!=-1)
            displayEditable(selection);
    }//GEN-LAST:event_cbEditItemStateChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(selection!=-1)
        {
            persons.remove(selection);
            txtEditName.setText("");
            txtEditAge.setText("");
            
            EditStatus.setText("Status : Record deleted.");
            updateComboBox();
            updateRecordCounter();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cbResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbResultActionPerformed

    private void txtHeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHeightFocusLost

        try{
            height = Double.parseDouble(txtHeight.getText());
            ValidateHeight();
        }catch(NumberFormatException e){
            lblHeightErr.setVisible(true);
        }
    }//GEN-LAST:event_txtHeightFocusLost

    private void txtAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusLost
        try{
            age = Integer.parseInt(txtAge.getText());
            ValidateAge();           
        }catch(NumberFormatException e){
            lblAgeErr.setVisible(true);
        }
    }//GEN-LAST:event_txtAgeFocusLost

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost

        try{
            name = txtName.getText();            
            ValidateName();            
        } catch (IllegalArgumentException e){
            lblNameErr.setVisible(true);
        }
    }//GEN-LAST:event_txtNameFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        myStringAge = txtAge.getText();
        myStringHeight = txtHeight.getText();
        myStringWeight = txtWeight.getText();


        try{
            
            name = txtName.getText();
            height = Double.parseDouble(txtHeight.getText());
            weight = Double.parseDouble(txtWeight.getText());
            age = Integer.parseInt(txtAge.getText());

        } catch (NumberFormatException e){
            
        }

        ValidateName();
        ValidateAge ();
        ValidateHeight();
        ValidateWeight();

        if (ValidateName() && ValidateAge() && ValidateHeight() && ValidateWeight()){

            JOptionPane.showMessageDialog(this, "Record saved.", "Saved", JOptionPane.INFORMATION_MESSAGE);
            persons.add(new Person(name,age,height,weight));
            BMIstatus.setText("Status : Record saved.");
            updateComboBox();
            updateRecordCounter();

        }
        else if (name.isEmpty() || myStringAge.isEmpty() || myStringHeight.isEmpty() || myStringWeight.isEmpty()){

            if (name.isEmpty()){
                lblNameErr.setText("This field must not be empty.");
            }
            
            if (myStringAge.isEmpty()){
                lblAgeErr.setText("This field must not be empty.");
            }

            if (myStringHeight.isEmpty()){
                lblHeightErr.setText("This field must not be empty.");
            }
            if (myStringWeight.isEmpty()){
                lblWeightErr.setText("This field must not be empty.");
            }            
            JOptionPane.showMessageDialog(this, "One or more fields are displaying error. Please revise.", "Error Message", JOptionPane.INFORMATION_MESSAGE);

        }

        else {
            JOptionPane.showMessageDialog(this, "One or more field has an invalid input", "Warning: Wrong input", JOptionPane.INFORMATION_MESSAGE);
        }

        /*if (age > 0 && age <= 150){
            txtAge.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "Age should be within the range of 1 to 150.", "Error",JOptionPane.INFORMATION_MESSAGE);
        }

        if (height >= 30){
            txtHeight.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "Your height cannot be 0cm.", "Error",JOptionPane.INFORMATION_MESSAGE);
        }

        if (weight >= 0){
            txtWeight.setText("");
        }
        else{
            JOptionPane.showMessageDialog(this, "Your weight cannot be lesser than 0kg.", "Error",JOptionPane.INFORMATION_MESSAGE);
        }

        */
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtWeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWeightFocusLost
        try{
            weight = Double.parseDouble(txtWeight.getText());
            ValidateWeight();
        }catch(NumberFormatException e){
            lblWeightErr.setVisible(true);
        }
    }//GEN-LAST:event_txtWeightFocusLost

    private void txtEditAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditAgeActionPerformed

    private void txtEditNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEditNameFocusLost
        try{
            name = txtEditName.getText();          
            ValidateName();            
        } catch (IllegalArgumentException e){
            lblEtNameErr.setVisible(true);
        }
    }//GEN-LAST:event_txtEditNameFocusLost

    private void txtEditNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEditNameActionPerformed

    private void txtEditHeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEditHeightFocusLost
        try{
            height = Double.parseDouble(txtEditHeight.getText());
            ValidateWeight();
        }catch(NumberFormatException e){
            lblEtHeightErr.setVisible(true);
        }
    }//GEN-LAST:event_txtEditHeightFocusLost

    private void txtHeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeightActionPerformed

    
        public boolean ValidateName(){
            boolean valid;
            pattern = Pattern.compile(namePattern);
            matcher = pattern.matcher (name);
            


            if (matcher.matches()){

                lblNameErr.setVisible(false);
                return true;

            } else {

                lblNameErr.setVisible (true); 
                valid = false;
                return false;
            }
    }

        public boolean ValidateAge(){
        boolean valid;
        pattern = Pattern.compile(agePattern);
        matcher = pattern.matcher (txtAge.getText());

        
        if (matcher.matches()){
            lblAgeErr.setVisible(false);
            return true;
        } else {

            lblAgeErr.setVisible (true); 
            valid = false;
            return false;
        }
    }
    
        public boolean ValidateHeight(){
        boolean valid;
        pattern = Pattern.compile(heightPattern);
        matcher = pattern.matcher (txtHeight.getText());

        
        if (matcher.matches()){
            lblHeightErr.setVisible(false);
            return true;
        } else {

            lblHeightErr.setVisible (true); 
            valid = false;
            return false;
        }
    }

        public boolean ValidateWeight(){
        boolean valid;
        pattern = Pattern.compile(weightPattern);
        matcher = pattern.matcher (txtWeight.getText());

        
        if (matcher.matches()){
            lblWeightErr.setVisible(false);
            return true;
        } else {
            lblWeightErr.setVisible (true); 
            valid = false;
            return false;
        }
    }

        public boolean validateEtName(){
            boolean valid;
            pattern = Pattern.compile(namePattern);
            matcher = pattern.matcher (etName);
            


            if (matcher.matches()){

                lblEtNameErr.setVisible(false);
                return true;

            } else {

                lblEtNameErr.setVisible (true); 
                valid = false;
                return false;
            }
    }        
        
        public boolean validateEtAge(){
            boolean valid;
            pattern = Pattern.compile(agePattern);
            matcher = pattern.matcher (txtEditAge.getText());
            


            if (matcher.matches()){

                lblEtAgeErr.setVisible(false);
                return true;

            } else {

                lblEtAgeErr.setVisible (true); 
                valid = false;
                return false;
            }
    }             
        
        public boolean validateEtHeight(){
            boolean valid;
            pattern = Pattern.compile(heightPattern);
            matcher = pattern.matcher (txtEditHeight.getText());
            


            if (matcher.matches()){

                lblEtHeightErr.setVisible(false);
                return true;

            } else {

                lblEtHeightErr.setVisible (true); 
                valid = false;
                return false;
            }
    }             
        
        public boolean validateEtWeight(){
            boolean valid;
            pattern = Pattern.compile(weightPattern);
            matcher = pattern.matcher (txtEditWeight.getText());
            


            if (matcher.matches()){

                lblEtWeightErr.setVisible(false);
                return true;

            } else {

                lblEtWeightErr.setVisible (true); 
                valid = false;
                return false;
            }
    }             
        
        
        
        
    public void updateComboBox() {
        cbResult.removeAllItems();
        cbEdit.removeAllItems();
        for(Person p: persons){
            cbResult.addItem(p.getName());
            cbEdit.addItem(p.getName());
        }
        
    }
    
    //To display how much record in the array
    public void updateRecordCounter(){
        BMIcounter.setText(recordCounter());
        BMIcounter2.setText(recordCounter());
    }
    
    //To calcualte how much record in the array
    public String recordCounter() {
        int size = persons.size();
        String counter = "Record count = " + size;
        
        return counter;
    }
    
    //To calculate the BMI
    public double BMIcal(double height, double weight) {
        double BMI = ((weight/height)/height)*10000;
        
        return BMI;
    }
    
    //To return the BMI recommendation string
   public String BMIreco(double bmi) {
    if (bmi < 18.5) {
        return "Your BMI is below normal. \nConsider gaining some weight.";
    } else if (bmi >= 18.5 && bmi < 24.9) {
        return "Your BMI is within the normal range. \nMaintain a healthy lifestyle.";
    } else if (bmi >= 25 && bmi < 29.9) {
        return "Your BMI indicates you are overweight. \nConsider losing some weight.";
    } else {
        return "Your BMI indicates obesity. \nIt is recommended to consult a doctor and plan a weight loss strategy.";
    }
}
    
    //To display result
    public void displayResult(int Selection) {
        Person p = persons.get(Selection);
        
        resultOutput.setText("HI," + p.getName()+"\n"
                                +"Your BMI is " + df.format(BMIcal(p.getHeight(),p.getWeight()))+"\n"
                                +BMIreco(BMIcal(p.getHeight(),p.getWeight())));
    }
    
    //To display data for the edit panel
    public void displayEditable(int Selection) {
        Person p = persons.get(Selection);
        
        txtEditName.setText(p.getName());
        txtEditAge.setText(String.valueOf(p.getAge()));
        txtEditHeight.setText(String.valueOf(p.getHeight()));
        txtEditWeight.setText(String.valueOf(p.getWeight()));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BMI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BMI().setVisible(true);
            }
        });
    }

    ArrayList<Person> persons = new ArrayList<>();
    String name, namePattern, agePattern, heightPattern, weightPattern;
    String etName, etAge, etHeight, etWeight, edtName;
    double height, weight, edtHeight, edtWeight;
    int age, edtAge;
            
    //This function is to set the decimal place to 2 decimal place
    private static final DecimalFormat df = new DecimalFormat("0.00");
    int selection;
    Pattern pattern;
    Matcher matcher;
    
    String myStringAge;
    String myStringHeight;
    String myStringWeight;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BMIcounter;
    private javax.swing.JLabel BMIcounter2;
    private javax.swing.JLabel BMIstatus;
    private javax.swing.JLabel EditStatus;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbEdit;
    private javax.swing.JComboBox<String> cbResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAgeErr;
    private javax.swing.JLabel lblEtAgeErr;
    private javax.swing.JLabel lblEtHeightErr;
    private javax.swing.JLabel lblEtNameErr;
    private javax.swing.JLabel lblEtWeightErr;
    private javax.swing.JLabel lblHeightErr;
    private javax.swing.JLabel lblNameErr;
    private javax.swing.JLabel lblWeightErr;
    private javax.swing.JTextArea resultOutput;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtEditAge;
    private javax.swing.JTextField txtEditHeight;
    private javax.swing.JTextField txtEditName;
    private javax.swing.JTextField txtEditWeight;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
